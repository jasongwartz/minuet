module me.gwartz.minuet.ostinato

// To be used for specifying *when* an action should happen
typealias TimePosition = String

typealias Effect = "flanger"|"lpf"

typealias Synth = "FMSynth"|"AMSynth"

class Instrument {
    synth: Synth?
    sample: String?
    on: Listing<String>
    with: Listing<Effect>
}

function everyBar(pattern: String(matches(Regex(#"\d:\d"#)))) = new Listing<String> {
    for (n in IntSeq(0, 3)) {
        "\"\(n):\(pattern)\""
    }
}.join(" ")


// Interface to be satisfied by data structure passed to the evaluator

bpm: Int16 = 300

timeSignature: String(matches(Regex(#"\d{1,3}/\d{1,3}"#)))

instruments: Listing<Instrument>
